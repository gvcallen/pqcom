#include <Arduino.h>
#include <LoRaLib.h>
#include <gel.h>

int nss = 9; // PB1
int dio0 = 2; // PC1
int reset = 8; // PB0
// SX1278 radio = new Module(nss, dio0, reset);

gel::Radio radio;

size_t count = 0;

uint8_t payload[] =
  "00000#"
  "abcdefghijklmnopqrstuvwxyz\n"
  "abcdefghijklmnopqrstuvwxyz\n"
  "abcdefghijklmnopqrstuvwxyz\n"
  "abcdefghijklmnopqrstuvwxyz\n"
  "abcdefghijklmnopqrstuvwxyz\n"
  "abcdefghijklmnopqrstuvwxyz\n"
  "abcdefghijklmnopqrstuvwxyz\n"
  "abcdefghijklmnopqrstuvwxyz\n"
  "abcdefghijklmnopqrstuvwxyz\n"
  "Done\n";

void setFlag(void);

bool myInterruptTriggered = false;
void myInterrupt()
{
  myInterruptTriggered = true;
}

// or using RadioShield
// https://github.com/jgromes/RadioShield
//SX1278 radio = RadioShield.ModuleA;

void setup() {
  OSCCAL = 101;
  Serial.begin(115200);

  // initialize SX1278 with default settings
  Serial.print(F("[SX1278] Initializing ... "));

  gel::RadioConfig config;
  gel::RadioPins pins;

  pins.nss = nss;
  pins.dio0 = dio0;
  pins.reset = reset;

  radio.begin(pins, config);

  Serial.print(F("[SX1278] Sending first packet ... "));
  radio.startTransmit({payload, sizeof (payload)});
}

// flag to indicate that a packet was sent
volatile bool transmittedFlag = false;

void setFlag(void) {
  transmittedFlag = true;
}

void loop() {

  if(radio.getState() != gel::Radio::State::Transmitting) {
    // reset flag
    count++;
    transmittedFlag = false;

    Serial.println("#" + String(count) + " transmission finished!");

    delay(24);

    sprintf((char*)payload, "%05d", count);
    payload[6] = '#';

    Serial.print("#1 "); Serial.println(millis());
    radio.startTransmit({payload, sizeof (payload)});
  }
}